{"version":3,"sources":["reducers/userDetails.js","store/configureStore.js","actions/userDetails.js","components/LoginPage.js","components/Dashboard.js","components/Register.js","components/UserDetails.js","components/NotFoundPage.js","components/Header.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["initialState","users","viewUser","isLoggedIn","authError","token","info","status","page","email","state","action","type","payload","userData","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","LoadUsers","LoginPage","password","handleChange","e","persist","setState","target","name","value","handleSubmit","preventDefault","loginData","props","startLogin","this","logout","to","className","onSubmit","id","placeholder","onChange","React","Component","connect","dispatch","loginInput","fetch","method","headers","body","JSON","stringify","then","response","json","Error","data","catch","error","Dashboard","prevPage","GetUsers","nextPage","renderUsersData","usersList","length","colSpan","map","user","index","first_name","last_name","key","onClick","disabled","getState","res","result","Register","registration","userdata","registerSuccess","registerFail","UserDetails","handleDelete","confirmAlert","title","message","buttons","label","parseInt","match","params","deleteUserData","history","push","getUserDetails","profilePic","avatar","src","width","height","userId","loadUserData","NotFoundPage","Header","handleLogout","isAuthenticated","component","rest","AppRouter","path","exact","store","createStore","userDetails","applyMiddleware","thunk","App","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","unregister","console"],"mappings":"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","file":"static/js/main.b2298efa.chunk.js","sourcesContent":["const initialState = {\r\n    users: [],\r\n    viewUser: '',\r\n    isLoggedIn: false,\r\n    authError: null,\r\n    token: '',\r\n    info: '',\r\n    status: false,\r\n    page: 1,\r\n    email: ''\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_LOGIN_STATE\": {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        case \"LOGIN_FAIL\": {\r\n            return {\r\n                ...state,\r\n                authError: action.authError\r\n            }\r\n        }\r\n        case \"REGISTER_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        case \"REGISTER_FAIL\": {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        case \"LOAD_USERS\": {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case \"DELETE_USER\": {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case \"LOAD_USER_DATA\": {\r\n            return {\r\n                ...state,\r\n                viewUser: action.userData\r\n            }\r\n        }\r\n        case \"PREV_PAGE\": {\r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            }\r\n        }\r\n        case \"NEXT_PAGE\": {\r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            }\r\n        }\r\n        case 'LOGOUT': {\r\n            return {\r\n                ...initialState\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n} ","// import { createStore} from 'redux';\r\n// import Reducer from '../reducers/Reducer';\r\n\r\n// import thunk from 'redux-thunk';\r\n\r\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// export default () => {\r\n//     const store = createStore(\r\n//         Reducer,\r\n//         // composeEnhancers(applyMiddleware(thunk))\r\n//         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//     );\r\n\r\n//     return store;\r\n// };\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport userDetails from '../reducers/userDetails';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default () => {\r\n    const store = createStore(\r\n        userDetails,\r\n        composeEnhancers(applyMiddleware(thunk))\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n\r\n    return store;\r\n};\r\n\r\n","export const setLogin = (loginData) => {\r\n    return {\r\n        type: \"SET_LOGIN_STATE\",\r\n        payload: loginData\r\n    }\r\n}\r\n\r\nexport const loginFail = (authError) => {\r\n    return {\r\n        type: \"LOGIN_FAIL\",\r\n        authError\r\n    }\r\n}\r\n\r\nexport const startLogin = (loginInput) => {\r\n    const email = loginInput.email;\r\n    return (dispatch) => {\r\n        return fetch(\"https://reqres.in/api/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(loginInput)\r\n        })\r\n            .then((response) => {\r\n                if (response.status >= 200 && response.status <= 299) {\r\n                    return response.json();\r\n                } else {\r\n                    throw Error(response.status);\r\n                }\r\n            })\r\n            .then(data => {\r\n                dispatch(setLogin({ ...data, isLoggedIn: true, authError: null, email }));\r\n            })\r\n            .catch((error) => {\r\n                dispatch(loginFail('Please enter valid email and password'));\r\n                return error;\r\n            })\r\n    }\r\n}\r\n\r\nexport const registerSuccess = (data) => {\r\n    return {\r\n        type: \"REGISTER_SUCCESS\",\r\n        payload: data\r\n    }\r\n}\r\nexport const registerFail = (error) => {\r\n    return {\r\n        type: \"REGISTER_FAIL\",\r\n        payload: error\r\n    }\r\n}\r\nexport const registration = (userdata) => {\r\n    return (dispatch) => {\r\n        fetch(\"https://reqres.in/api/register\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(userdata)\r\n        })\r\n            .then((response) => {\r\n                if (response.status >= 200 && response.status <= 299) {\r\n                    return response.json();\r\n                } else {\r\n                    throw Error(response.status);\r\n                }\r\n            })\r\n            .then(data => {\r\n                dispatch(registerSuccess({ info: '', status: true }));\r\n                const hasError = data.error != null;\r\n                return data;\r\n            })\r\n            .catch((error) => {\r\n                dispatch(registerFail({ info: 'Please fill valid email & password', status: false }));\r\n                return error;\r\n            });\r\n    }\r\n}\r\n\r\nexport const LoadUsers = (users) => {\r\n    return {\r\n        type: 'LOAD_USERS',\r\n        users\r\n    }\r\n}\r\n\r\nexport const prevPage = (currentPage) => {\r\n    return {\r\n        type: 'PREV_PAGE',\r\n        page: currentPage - 1\r\n    }\r\n}\r\nexport const nextPage = (currentPage) => {\r\n    return {\r\n        type: 'NEXT_PAGE',\r\n        page: currentPage + 1\r\n    }\r\n}\r\nexport const GetUsers = (pageNo = 1) => {\r\n    return (dispatch, getState) => {\r\n        const page = getState().page;\r\n        fetch(`https://reqres.in/api/users?page=${page}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                const data = result.data;\r\n                dispatch(LoadUsers(data));\r\n            });\r\n    }\r\n}\r\n\r\nexport const loadUserData = (userData) => {\r\n    return {\r\n        type: 'LOAD_USER_DATA',\r\n        userData\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (userId) => {\r\n    return (dispatch) => {\r\n        fetch(`https://reqres.in/api/users/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                const userData = result.data;\r\n                dispatch(loadUserData(userData));\r\n            });\r\n    }\r\n}\r\n\r\nexport const deleteUser = () => {\r\n    return {\r\n        type: 'DELETE_USER'\r\n    }\r\n}\r\nexport const deleteUserData = (id) => {\r\n    return (dispatch) => {\r\n        fetch(`https://reqres.in/api/users/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then((res) => {\r\n                dispatch(deleteUser(res))\r\n            })\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return {\r\n        type: 'LOGOUT',\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { startLogin, logout } from \"../actions/userDetails\";\r\n\r\nexport class LoginPage extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n    handleChange = (e) => {\r\n        e.persist();\r\n        this.setState(() => ({ [e.target.name]: e.target.value }));\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        const loginData = { \"email\": this.state.email, \"password\": this.state.password };\r\n        this.props.startLogin(loginData);\r\n    }\r\n    componentDidMount() {\r\n        this.props.logout();\r\n    }\r\n    render() {\r\n        const { authError, isLoggedIn } = this.props;\r\n        if (isLoggedIn) return <Redirect to=\"/dashboard\" />\r\n        return (\r\n            <div className=\"box-layout\" >\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h2 className=\"text-center\">React Login</h2>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            id=\"inputEmail\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email address\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"inputPassword\"\r\n                            placeholder=\"Enter password\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <button className=\"btn btn-primary btn-block\">Login</button>\r\n                    {authError && <p className=\"info-error\">{authError}</p>}\r\n                </form>\r\n                <p className=\"text-center\">\r\n                    <button className=\"btn btn-link ml-auto\">\r\n                        <Link to=\"/register\">Register</Link>\r\n                    </button>\r\n                </p>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.authError,\r\n        isLoggedIn: state.isLoggedIn\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    startLogin: (loginInput) => dispatch(startLogin(loginInput)),\r\n    logout: () => dispatch(logout())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { GetUsers, prevPage, nextPage } from '../actions/userDetails';\r\n\r\nexport class Dashboard extends React.Component {\r\n    componentDidMount() {\r\n        this.props.GetUsers();\r\n    }\r\n    prevPage = () => {\r\n        this.props.prevPage(this.props.page);\r\n        this.props.GetUsers();\r\n    }\r\n    nextPage = () => {\r\n        this.props.nextPage(this.props.page);\r\n        this.props.GetUsers();\r\n    }\r\n\r\n    renderUsersData = () => {\r\n        if (this.props.usersList.length <= 0) return (<tr><td colSpan=\"3\" className=\"text-center\">No data Found</td></tr>)\r\n        return this.props.usersList.map((user, index) => {\r\n            const { email, first_name, last_name, id } = user;\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{<Link to={`/user/${id}`}>{email}</Link>}</td>\r\n                    <td>{first_name}</td>\r\n                    <td>{last_name}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard-wrapper\">\r\n                <h3 className=\"text-center m-2\">Dashboard</h3>\r\n                <table id=\"userTable\" className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Email</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderUsersData()}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"buttons-wrapper\">\r\n                    <button onClick={this.prevPage} disabled={this.props.page > 1 ? false : true}>&lt;</button>\r\n                    <span>{this.props.page}</span>\r\n                    <button onClick={this.nextPage}\r\n                        disabled={this.props.usersList.length <= 0 ? true : false}\r\n                    >&gt;</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersList: state.users,\r\n        page: state.page\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    GetUsers: (page) => dispatch(GetUsers(page)),\r\n    prevPage: (page) => dispatch(prevPage(page)),\r\n    nextPage: (page) => dispatch(nextPage(page))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { registration, logout } from '../actions/userDetails';\r\n\r\nexport class Register extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        e.persist();\r\n        this.setState(() => ({ [e.target.name]: e.target.value }))\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        const userData = { \"email\": this.state.email, \"password\": this.state.password };\r\n        this.props.registration(userData);\r\n    }\r\n    componentDidMount() {\r\n        this.props.logout();\r\n    }\r\n    render() {\r\n        const { info, status } = this.props;\r\n        if (status) return <Redirect to=\"/login\" />\r\n        return (\r\n            <div className=\"box-layout\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h2 className=\"text-center\">Registration Form</h2>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            id=\"inputEmail\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email address\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"inputPassword\"\r\n                            placeholder=\"Enter password\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-block mr-4\">\r\n                        Submit\r\n                        </button>\r\n                    <p className=\"info-error\">{info}</p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        info: state.info,\r\n        status: state.status\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    registration: (userData) => dispatch(registration(userData)),\r\n    logout: () => dispatch(logout())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserDetails, deleteUserData } from '../actions/userDetails';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nexport class UserDetails extends Component {\r\n    componentDidMount() {\r\n        const id = parseInt(this.props.match.params.id);\r\n        this.props.getUserDetails(id);\r\n    }\r\n    handleDelete = () => {\r\n        confirmAlert({\r\n            title: 'Confirm to delete',\r\n            message: 'Do you want to delete this user details?',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => {\r\n                        const id = parseInt(this.props.match.params.id);\r\n                        this.props.deleteUserData(id);\r\n                        this.props.history.push('/dashboard');\r\n                    }\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => { }\r\n                }\r\n            ]\r\n        });\r\n\r\n    }\r\n    render() {\r\n        const { avatar: profilePic, first_name, last_name, email } = this.props.userData;\r\n        return (\r\n            <div className=\"user-details\">\r\n                <img src={profilePic} width=\"180\" height=\"180\" />\r\n                <div className=\"user-email\">{email}</div>\r\n                <div className=\"user-name\">{`${first_name}${last_name}`}</div>\r\n                <button className=\"btn btn-outline-danger\" onClick={this.handleDelete}>Delete</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { userData: state.viewUser }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getUserDetails: (userData) => dispatch(getUserDetails(userData)),\r\n    deleteUserData: (id) => dispatch(deleteUserData(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetails);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class NotFoundPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"error-page\">\r\n                    <div><b>404</b> Page Not Found!!</div>\r\n                    <Link to=\"/login\">Login to view users</Link>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions/userDetails';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nexport class Header extends React.Component {\r\n    handleLogout = () => {\r\n        confirmAlert({\r\n            title: 'Confirm to logout',\r\n            message: 'Do you want to logout',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => this.props.logout()\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => { }\r\n                }\r\n            ]\r\n        });\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex header\">\r\n                <span className=\"project-name\">\r\n                    React JS\r\n                </span>\r\n                <div className=\"user-wrapper\">\r\n                    <span>{this.props.email}</span>\r\n                    <button className=\"btn\" onClick={this.handleLogout}>Logout</button>\r\n                </div>\r\n\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({ email: state.email })\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    logout: () => dispatch(logout())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => (\r\n        <Route {...rest} component={(props) => (\r\n            isAuthenticated ? (\r\n                <div>\r\n                    <Header />\r\n                    <Component {...props} />\r\n                </div>\r\n            ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n        )} />\r\n    );\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.isLoggedIn\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => (\r\n        <Route {...rest} component={(props) => (\r\n            isAuthenticated ? (\r\n                <Redirect to=\"/dashboard\" />\r\n            ) : (\r\n                    <Component {...props} />\r\n                )\r\n        )} />\r\n    );\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.isLoggedIn\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react';\r\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport LoginPage from '../components/LoginPage';\r\nimport Dashboard from '../components/Dashboard';\r\nimport Register from '../components/Register';\r\nimport UserDetails from '../components/UserDetails';\r\nimport NotFoundPage from '../components/NotFoundPage';\r\nimport PrivateRoute from '../router/PrivateRoute';\r\nimport PublicRoute from '../router/PublicRoute';\r\n\r\n\r\nconst AppRouter = (props) => (\r\n    <HashRouter {...props}>\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/\" exact><Redirect to=\"/login\" /></Route>\r\n                <PublicRoute path=\"/login\" component={LoginPage} />\r\n                <PrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n                <PublicRoute path=\"/register\" component={Register} />\r\n                <PrivateRoute path=\"/user/:id\" component={UserDetails} />\r\n                <Route component={NotFoundPage} />\r\n            </Switch>\r\n        </div>\r\n    </HashRouter>\r\n);\r\n\r\nexport default AppRouter;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport AppRouter from './router/AppRouter';\n\nimport './App.css';\n\nconst store = configureStore();\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}