{"version":3,"sources":["reducers/userDetailsReducer.js","store/configureStore.js","components/InputComponent.js","actions/userDetailsActions.js","components/LoginPage.js","components/Dashboard.js","components/Register.js","components/UserDetails.js","components/NotFoundPage.js","components/Header.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["initialState","users","viewUser","isLoggedIn","authError","token","info","status","page","email","state","action","type","payload","userData","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Input","name","placeholder","onChange","className","id","Fragment","defaultProps","LoadUsers","LoginPage","props","useSelector","dispatch","useDispatch","useState","setEmail","password","setPassword","useEffect","onSubmit","e","preventDefault","persist","loginInput","fetch","method","headers","body","JSON","stringify","then","response","json","Error","data","catch","error","startLogin","value","target","to","Dashboard","prevPage","GetUsers","nextPage","renderUsersData","usersList","length","colSpan","map","user","index","first_name","last_name","key","this","onClick","disabled","React","Component","connect","getState","res","result","Register","userdata","registerSuccess","registerFail","UserDetails","profilePic","avatar","userId","parseInt","match","params","loadUserData","src","width","height","confirmAlert","title","message","buttons","label","deleteUserData","history","push","NotFoundPage","Header","isAuthenticated","component","rest","AppRouter","path","exact","store","createStore","userDetailsReducer","applyMiddleware","thunk","App","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"2PAAMA,EAAe,CACjBC,MAAO,GACPC,SAAU,GACVC,YAAY,EACZC,UAAW,KACXC,MAAO,GACPC,KAAM,GACNC,QAAQ,EACRC,KAAM,EACNC,MAAO,IAGI,aAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCAC7C,OAAQA,EAAOC,MAEX,IAAK,mBACL,IAAK,gBACL,IAAK,kBACD,OAAO,2BACAF,GACAC,EAAOE,SAIlB,IAAK,aACD,OAAO,2BACAH,GADP,IAEIN,UAAWO,EAAOP,YAI1B,IAAK,aACD,OAAO,2BACAM,GADP,IAEIT,MAAOU,EAAOV,QAGtB,IAAK,cACD,OAAO,eACAS,GAGX,IAAK,iBACD,OAAO,2BACAA,GADP,IAEIR,SAAUS,EAAOG,WAGzB,IAAK,YACL,IAAK,YACD,OAAO,2BACAJ,GADP,IAEIF,KAAMG,EAAOH,OAIrB,IAAK,SACD,OAAO,eACAR,GAGX,QAAS,OAAOU,I,QCzDlBK,EAAmBC,OAAOC,sCAAwCC,I,8BCFlEC,EAAQ,SAAC,GAQR,IAPHC,EAOE,EAPFA,KACAR,EAME,EANFA,KACAS,EAKE,EALFA,YACAC,EAIE,EAJFA,SACAC,EAGE,EAHFA,UACAC,EAEE,EAFFA,GAEE,yEAEF,OACI,kBAAC,IAAMC,SAAP,KACI,2BACID,GAAIA,EACJJ,KAAMA,EACNR,KAAMA,EACNS,YAAaA,EACbC,SAAUA,EACVC,UAAWA,MAM3BJ,EAAMO,aAAe,CACjBd,KAAM,OACNW,UAAW,IAGAJ,QCkDFQ,EAAY,SAAC1B,GACtB,MAAO,CACHW,KAAM,aACNX,UCrBO2B,EAxDG,SAACC,GAAW,IAClBzB,EAAc0B,aAAY,SAAApB,GAAK,OAAIA,KAAnCN,UACF2B,EAAWC,cAFQ,EAICC,mBAAS,IAJV,mBAIlBxB,EAJkB,KAIXyB,EAJW,OAKOD,mBAAS,IALhB,mBAKlBE,EALkB,KAKRC,EALQ,KAQzBC,qBAAU,WACNN,ED+IG,CACHnB,KAAM,aC/IP,IAQH,OACI,yBAAKW,UAAU,cACX,0BAAMe,SARO,SAACC,GAClBA,EAAEC,iBACFD,EAAEE,UACFV,EDRkB,SAACW,GACvB,IAAMjC,EAAQiC,EAAWjC,MACzB,OAAO,SAACsB,GACJ,OAAOY,MAAM,8BAA+B,CACxCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,KAEpBO,MAAK,SAACC,GACH,GAAIA,EAAS3C,QAAU,KAAO2C,EAAS3C,QAAU,IAC7C,OAAO2C,EAASC,OAEhB,MAAMC,MAAMF,EAAS3C,WAG5B0C,MAAK,SAAAI,GACFtB,EA/BL,CACHnB,KAAM,kBACNC,QA6B0B,2BAAKwC,GAAN,IAAYlD,YAAY,EAAMC,UAAW,KAAMK,eAEnE6C,OAAM,SAACC,GAEJ,OADAxB,EA3BL,CACHnB,KAAM,aACNR,UAyB2B,0CACZmD,MCdNC,CAAW,CAAE/C,QAAO0B,gBAMrB,wBAAIZ,UAAU,eAAd,eACA,yBAAKA,UAAU,cACX,kBAAC,EAAD,CACIC,GAAG,aACHZ,KAAK,QACLQ,KAAK,QACLG,UAAU,eACVF,YAAY,gBACZC,SAAU,SAACiB,GAAQ,IAAMkB,EAAQlB,EAAEmB,OAAOD,MAAOvB,EAASuB,OAGlE,yBAAKlC,UAAU,cACX,kBAAC,EAAD,CACIX,KAAK,WACLQ,KAAK,WACLG,UAAU,eACVC,GAAG,gBACHH,YAAY,iBACZC,SAAU,SAACiB,GAAQ,IAAMkB,EAAQlB,EAAEmB,OAAOD,MAAOrB,EAAYqB,OAGrE,4BAAQlC,UAAU,6BAAlB,SACCnB,GAAa,uBAAGmB,UAAU,cAAcnB,IAE7C,uBAAGmB,UAAU,eACT,4BAAQA,UAAU,wBACd,kBAAC,IAAD,CAAMoC,GAAG,aAAT,gB,gCCjDPC,EAAb,4MAIIC,SAAW,WACP,EAAKhC,MAAMgC,SAAS,EAAKhC,MAAMrB,MAC/B,EAAKqB,MAAMiC,YANnB,EAQIC,SAAW,WACP,EAAKlC,MAAMkC,SAAS,EAAKlC,MAAMrB,MAC/B,EAAKqB,MAAMiC,YAVnB,EAaIE,gBAAkB,WACd,OAAI,EAAKnC,MAAMoC,UAAUC,QAAU,EAAW,4BAAI,wBAAIC,QAAQ,IAAI5C,UAAU,eAA1B,kBAC3C,EAAKM,MAAMoC,UAAUG,KAAI,SAACC,EAAMC,GAAW,IACtC7D,EAAqC4D,EAArC5D,MAAO8D,EAA8BF,EAA9BE,WAAYC,EAAkBH,EAAlBG,UAAWhD,EAAO6C,EAAP7C,GACtC,OACI,wBAAIiD,IAAKjD,GACL,4BAAK,kBAAC,IAAD,CAAMmC,GAAE,gBAAWnC,IAAOf,IAC/B,4BAAK8D,GACL,4BAAKC,QArBzB,kEAEQE,KAAK7C,MAAMiC,aAFnB,+BA2BQ,OACI,yBAAKvC,UAAU,qBACX,wBAAIA,UAAU,mBAAd,aACA,2BAAOC,GAAG,YAAYD,UAAU,SAC5B,+BACI,4BACI,qCACA,0CACA,2CAGR,+BACKmD,KAAKV,oBAGd,yBAAKzC,UAAU,mBACX,4BAAQoD,QAASD,KAAKb,SAAUe,UAAWF,KAAK7C,MAAMrB,MAAtD,KACA,8BAAOkE,KAAK7C,MAAMrB,MAClB,4BAAQmE,QAASD,KAAKX,SAClBa,SAAUF,KAAK7C,MAAMoC,UAAUC,QAAU,GAD7C,WA7CpB,GAA+BW,IAAMC,WAiEtBC,eAZS,SAACrE,GACrB,MAAO,CACHuD,UAAWvD,EAAMT,MACjBO,KAAME,EAAMF,SAGO,SAACuB,GAAD,MAAe,CACtC+B,SAAU,SAACtD,GAAD,OAAUuB,EFmCA,WACpB,OAAO,SAACA,EAAUiD,GACd,IAAMxE,EAAOwE,IAAWxE,KACxBmC,MAAM,oCAAD,OAAqCnC,GAAQ,CAC9CoC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBI,MAAK,SAACgC,GAAD,OAASA,EAAI9B,UAClBF,MAAK,SAACiC,GACH,IAAM7B,EAAO6B,EAAO7B,KACpBtB,EAASJ,EAAU0B,QE/CFS,CAAStD,KACtCqD,SAAU,SAACrD,GAAD,OAAUuB,EFuBb,CACHnB,KAAM,YACNJ,KEzBkCA,EFyBd,KExBxBuD,SAAU,SAACvD,GAAD,OAAUuB,EF4Bb,CACHnB,KAAM,YACNJ,KE9BkCA,EF8Bd,QE3BbuE,CAA6CnB,GCd7CuB,EAlDE,SAACtD,GACd,IAAME,EAAWC,cADO,EAECF,aAAY,SAAApB,GAAK,OAAIA,KAAtCJ,EAFgB,EAEhBA,KAAMC,EAFU,EAEVA,OAFU,EAIE0B,mBAAS,IAJX,mBAIjBxB,EAJiB,KAIVyB,EAJU,OAKQD,mBAAS,IALjB,mBAKjBE,EALiB,KAKPC,EALO,KAOxBC,qBAAU,WACNN,EHiJG,CACHnB,KAAM,aGjJP,IAQH,OAAIL,EAAe,kBAAC,IAAD,CAAUoD,GAAG,WACxB,yBAAKpC,UAAU,cACnB,0BAAMe,SARW,SAACC,GHoCE,IAAC6C,EGnCrB7C,EAAEC,iBACFD,EAAEE,UACFV,GHiCqBqD,EGjCC,CAAE3E,QAAO0B,YHkC5B,SAACJ,GACJY,MAAM,iCAAkC,CACpCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUoC,KAEpBnC,MAAK,SAACC,GACH,GAAIA,EAAS3C,QAAU,KAAO2C,EAAS3C,QAAU,IAC7C,OAAO2C,EAASC,OAEhB,MAAMC,MAAMF,EAAS3C,WAG5B0C,MAAK,SAAAI,GAGF,OAFAtB,EA7Be,SAACsB,GAC5B,MAAO,CACHzC,KAAM,mBACNC,QAASwC,GA0BQgC,CAAgB,CAAE/E,KAAM,GAAIC,QAAQ,KAC5B8C,EAAKE,MACfF,KAEVC,OAAM,SAACC,GAEJ,OADAxB,EA5BY,SAACwB,GACzB,MAAO,CACH3C,KAAM,gBACNC,QAAS0C,GAyBQ+B,CAAa,CAAEhF,KAAM,qCAAsCC,QAAQ,KACrEgD,UGlDX,wBAAIhC,UAAU,eAAd,qBACA,yBAAKA,UAAU,cACX,kBAAC,EAAD,CACIC,GAAG,aACHZ,KAAK,QACLQ,KAAK,QACLG,UAAU,eACVF,YAAY,gBACZC,SAAU,SAACiB,GAAQ,IAAMkB,EAAQlB,EAAEmB,OAAOD,MAAOvB,EAASuB,OAGlE,yBAAKlC,UAAU,cACX,kBAAC,EAAD,CACIX,KAAK,WACLQ,KAAK,WACLG,UAAU,eACVC,GAAG,gBACHH,YAAY,iBACZC,SAAU,SAACiB,GAAQ,IAAMkB,EAAQlB,EAAEmB,OAAOD,MAAOrB,EAAYqB,OAGrE,4BAAQ7C,KAAK,SAASW,UAAU,kCAAhC,UAGA,uBAAGA,UAAU,cAAcjB,M,QCKxBiF,G,MAhDK,SAAC1D,GACjB,IAAME,EAAWC,cACT9B,EAAa4B,aAAY,SAAApB,GAAK,OAAIA,KAAlCR,SACQsF,EAA6CtF,EAArDuF,OAAoBlB,EAAiCrE,EAAjCqE,WAAYC,EAAqBtE,EAArBsE,UAAW/D,EAAUP,EAAVO,MAEnD4B,qBAAU,WACN,IJ+GuBqD,EI/GjBlE,EAAKmE,SAAS9D,EAAM+D,MAAMC,OAAOrE,IACvCO,GJ8GuB2D,EI9GClE,EJ+GrB,SAACO,GACJY,MAAM,+BAAD,OAAgC+C,GAAU,CAC3C9C,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBI,MAAK,SAACgC,GAAD,OAASA,EAAI9B,UAClBF,MAAK,SAACiC,GACH,IAAMpE,EAAWoE,EAAO7B,KACxBtB,EAlBY,SAACjB,GACzB,MAAO,CACHF,KAAM,iBACNE,YAeiBgF,CAAahF,YIxH/B,IAwBH,OAAKZ,EAED,6BACI,4BAAQqB,UAAU,gBACd,kBAAC,IAAD,CAAMoC,GAAG,cAAT,oBAEJ,yBAAKpC,UAAU,gBACX,yBAAKwE,IAAKP,EAAYQ,MAAM,MAAMC,OAAO,QACzC,yBAAK1E,UAAU,cAAcd,GAC7B,yBAAKc,UAAU,aAAf,UAA+BgD,GAA/B,OAA4CC,IAC5C,4BAAQjD,UAAU,yBAAyBoD,QAhClC,WACjBuB,uBAAa,CACTC,MAAO,oBACPC,QAAS,2CACTC,QAAS,CACL,CACIC,MAAO,MACP3B,QAAS,WACL,IAAMnD,EAAKmE,SAAS9D,EAAM+D,MAAMC,OAAOrE,IACvCO,EJuHM,SAACP,GAC3B,OAAO,SAACO,GACJY,MAAM,+BAAD,OAAgCnB,GAAM,CACvCoB,OAAQ,SACRC,QAAS,CACL,eAAgB,sBAGnBI,MAAK,SAACgC,GACHlD,EAbL,CACHnB,KAAM,oBIpHmB2F,CAAe/E,IACxBK,EAAM2E,QAAQC,KAAK,gBAG3B,CACIH,MAAO,KACP3B,QAAS,mBAiBb,YAVW,yBAAKpD,UAAU,iCAAf,gBCzBZmF,EAXM,WACjB,OACI,oCACI,yBAAKnF,UAAU,cACX,6BAAK,kCAAL,qBACA,kBAAC,IAAD,CAAMoC,GAAG,UAAT,0BCiCDgD,EAlCA,SAAC9E,GACZ,IAAME,EAAWC,cACXvB,EAAQqB,aAAY,SAAApB,GAAK,OAAIA,EAAMD,SAmBzC,OACI,yBAAKc,UAAU,iBACX,0BAAMA,UAAU,gBAAhB,YAGA,yBAAKA,UAAU,gBACX,8BAAOd,GACP,4BAAQc,UAAU,MAAMoD,QAxBf,WACjBuB,uBAAa,CACTC,MAAO,oBACPC,QAAS,wBACTC,QAAS,CACL,CACIC,MAAO,MACP3B,QAAS,kBAAM5C,EN6IxB,CACHnB,KAAM,aM5IE,CACI0F,MAAO,KACP3B,QAAS,mBAab,aCTDI,eAJS,SAACrE,GAAD,MAAY,CAChCkG,gBAAiBlG,EAAMP,cAGZ4E,EArBa,SAAC,GAAD,IACxB6B,EADwB,EACxBA,gBACW9B,EAFa,EAExB+B,UACGC,EAHqB,sDAKpB,kBAAC,IAAD,iBAAWA,EAAX,CAAiBD,UAAW,SAAChF,GAAD,OACxB+E,EACI,6BACI,kBAAC,EAAD,MACA,kBAAC9B,EAAcjD,IAGf,kBAAC,IAAD,CAAU8B,GAAG,kBCKlBoB,eAJS,SAACrE,GAAD,MAAY,CAChCkG,gBAAiBlG,EAAMP,cAGZ4E,EAlBY,SAAC,GAAD,IACvB6B,EADuB,EACvBA,gBACW9B,EAFY,EAEvB+B,UACGC,EAHoB,sDAKnB,kBAAC,IAAD,iBAAWA,EAAX,CAAiBD,UAAW,SAAChF,GAAD,OACxB+E,EACI,kBAAC,IAAD,CAAUjD,GAAG,eAET,kBAACmB,EAAcjD,UCapBkF,EAfG,SAAClF,GAAD,OACd,kBAAC,IAAeA,EACZ,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOmF,KAAK,IAAIC,OAAK,GAAC,kBAAC,IAAD,CAAUtD,GAAG,YACnC,kBAAC,EAAD,CAAaqD,KAAK,SAASH,UAAWjF,IACtC,kBAAC,EAAD,CAAcoF,KAAK,aAAaH,UAAWjD,IAC3C,kBAAC,EAAD,CAAaoD,KAAK,YAAYH,UAAW1B,IACzC,kBAAC,EAAD,CAAc6B,KAAK,YAAYH,UAAWtB,IAC1C,kBAAC,IAAD,CAAOsB,UAAWH,QCb5BQ,G,MZAYC,YACVC,EACArG,EAAiBsG,YAAgBC,QYO1BC,MARf,WACE,OACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,QCCcM,QACW,cAA7BxG,OAAOyG,SAASC,UAEe,UAA7B1G,OAAOyG,SAASC,UAEhB1G,OAAOyG,SAASC,SAAS9B,MACvB,2D,YCXN+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjF,MAAK,SAAAkF,GACJA,EAAaC,gBAEd9E,OAAM,SAAAC,GACL8E,QAAQ9E,MAAMA,EAAM6C,c","file":"static/js/main.27104310.chunk.js","sourcesContent":["const initialState = {\r\n    users: [],\r\n    viewUser: '',\r\n    isLoggedIn: false,\r\n    authError: null,\r\n    token: '',\r\n    info: '',\r\n    status: false,\r\n    page: 1,\r\n    email: ''\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case \"REGISTER_SUCCESS\":\r\n        case \"REGISTER_FAIL\":\r\n        case \"SET_LOGIN_STATE\": {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n\r\n        case \"LOGIN_FAIL\": {\r\n            return {\r\n                ...state,\r\n                authError: action.authError\r\n            }\r\n        }\r\n\r\n        case \"LOAD_USERS\": {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case \"DELETE_USER\": {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        case \"LOAD_USER_DATA\": {\r\n            return {\r\n                ...state,\r\n                viewUser: action.userData\r\n            }\r\n        }\r\n        case \"NEXT_PAGE\":\r\n        case \"PREV_PAGE\": {\r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            }\r\n        }\r\n\r\n        case 'LOGOUT': {\r\n            return {\r\n                ...initialState\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n} ","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport userDetailsReducer from '../reducers/userDetailsReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default () => {\r\n    const store = createStore(\r\n        userDetailsReducer,\r\n        composeEnhancers(applyMiddleware(thunk))\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n\r\n    return store;\r\n};\r\n\r\n","import React from 'react';\r\n\r\nconst Input = ({\r\n    name,\r\n    type,\r\n    placeholder,\r\n    onChange,\r\n    className,\r\n    id,\r\n    ...props\r\n}) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <input\r\n                id={id}\r\n                name={name}\r\n                type={type}\r\n                placeholder={placeholder}\r\n                onChange={onChange}\r\n                className={className}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nInput.defaultProps = {\r\n    type: \"text\",\r\n    className: \"\"\r\n}\r\n\r\nexport default Input;","export const setLogin = (loginData) => {\r\n    return {\r\n        type: \"SET_LOGIN_STATE\",\r\n        payload: loginData\r\n    }\r\n}\r\n\r\nexport const loginFail = (authError) => {\r\n    return {\r\n        type: \"LOGIN_FAIL\",\r\n        authError\r\n    }\r\n}\r\n\r\nexport const startLogin = (loginInput) => {\r\n    const email = loginInput.email;\r\n    return (dispatch) => {\r\n        return fetch(\"https://reqres.in/api/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(loginInput)\r\n        })\r\n            .then((response) => {\r\n                if (response.status >= 200 && response.status <= 299) {\r\n                    return response.json();\r\n                } else {\r\n                    throw Error(response.status);\r\n                }\r\n            })\r\n            .then(data => {\r\n                dispatch(setLogin({ ...data, isLoggedIn: true, authError: null, email }));\r\n            })\r\n            .catch((error) => {\r\n                dispatch(loginFail('Please enter valid email and password'));\r\n                return error;\r\n            })\r\n    }\r\n}\r\n\r\nexport const registerSuccess = (data) => {\r\n    return {\r\n        type: \"REGISTER_SUCCESS\",\r\n        payload: data\r\n    }\r\n}\r\nexport const registerFail = (error) => {\r\n    return {\r\n        type: \"REGISTER_FAIL\",\r\n        payload: error\r\n    }\r\n}\r\nexport const registration = (userdata) => {\r\n    return (dispatch) => {\r\n        fetch(\"https://reqres.in/api/register\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(userdata)\r\n        })\r\n            .then((response) => {\r\n                if (response.status >= 200 && response.status <= 299) {\r\n                    return response.json();\r\n                } else {\r\n                    throw Error(response.status);\r\n                }\r\n            })\r\n            .then(data => {\r\n                dispatch(registerSuccess({ info: '', status: true }));\r\n                const hasError = data.error != null;\r\n                return data;\r\n            })\r\n            .catch((error) => {\r\n                dispatch(registerFail({ info: 'Please fill valid email & password', status: false }));\r\n                return error;\r\n            });\r\n    }\r\n}\r\n\r\nexport const LoadUsers = (users) => {\r\n    return {\r\n        type: 'LOAD_USERS',\r\n        users\r\n    }\r\n}\r\n\r\nexport const prevPage = (currentPage) => {\r\n    return {\r\n        type: 'PREV_PAGE',\r\n        page: currentPage - 1\r\n    }\r\n}\r\nexport const nextPage = (currentPage) => {\r\n    return {\r\n        type: 'NEXT_PAGE',\r\n        page: currentPage + 1\r\n    }\r\n}\r\nexport const GetUsers = (pageNo = 1) => {\r\n    return (dispatch, getState) => {\r\n        const page = getState().page;\r\n        fetch(`https://reqres.in/api/users?page=${page}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                const data = result.data;\r\n                dispatch(LoadUsers(data));\r\n            });\r\n    }\r\n}\r\n\r\nexport const loadUserData = (userData) => {\r\n    return {\r\n        type: 'LOAD_USER_DATA',\r\n        userData\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (userId) => {\r\n    return (dispatch) => {\r\n        fetch(`https://reqres.in/api/users/${userId}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then((res) => res.json())\r\n            .then((result) => {\r\n                const userData = result.data;\r\n                dispatch(loadUserData(userData));\r\n            });\r\n    }\r\n}\r\n\r\nexport const deleteUser = () => {\r\n    return {\r\n        type: 'DELETE_USER'\r\n    }\r\n}\r\nexport const deleteUserData = (id) => {\r\n    return (dispatch) => {\r\n        fetch(`https://reqres.in/api/users/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        })\r\n            .then((res) => {\r\n                dispatch(deleteUser(res))\r\n            })\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return {\r\n        type: 'LOGOUT',\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport Input from './InputComponent';\r\nimport { startLogin, logout } from \"../actions/userDetailsActions\";\r\n\r\n\r\nconst LoginPage = (props) => {\r\n    const { authError } = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    //on load\r\n    useEffect(() => {\r\n        dispatch(logout());\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        dispatch(startLogin({ email, password }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"box-layout\" >\r\n            <form onSubmit={handleSubmit}>\r\n                <h2 className=\"text-center\">React Login</h2>\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        id=\"inputEmail\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Email address\"\r\n                        onChange={(e) => { const value = e.target.value; setEmail(value) }}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <Input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"inputPassword\"\r\n                        placeholder=\"Enter password\"\r\n                        onChange={(e) => { const value = e.target.value; setPassword(value) }}\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-primary btn-block\">Login</button>\r\n                {authError && <p className=\"info-error\">{authError}</p>}\r\n            </form>\r\n            <p className=\"text-center\">\r\n                <button className=\"btn btn-link ml-auto\">\r\n                    <Link to=\"/register\">Register</Link>\r\n                </button>\r\n            </p>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { GetUsers, prevPage, nextPage } from '../actions/userDetailsActions';\r\n\r\nexport class Dashboard extends React.Component {\r\n    componentDidMount() {\r\n        this.props.GetUsers();\r\n    }\r\n    prevPage = () => {\r\n        this.props.prevPage(this.props.page);\r\n        this.props.GetUsers();\r\n    }\r\n    nextPage = () => {\r\n        this.props.nextPage(this.props.page);\r\n        this.props.GetUsers();\r\n    }\r\n\r\n    renderUsersData = () => {\r\n        if (this.props.usersList.length <= 0) return (<tr><td colSpan=\"3\" className=\"text-center\">No data Found</td></tr>)\r\n        return this.props.usersList.map((user, index) => {\r\n            const { email, first_name, last_name, id } = user;\r\n            return (\r\n                <tr key={id}>\r\n                    <td>{<Link to={`/user/${id}`}>{email}</Link>}</td>\r\n                    <td>{first_name}</td>\r\n                    <td>{last_name}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard-wrapper\">\r\n                <h3 className=\"text-center m-2\">Dashboard</h3>\r\n                <table id=\"userTable\" className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Email</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderUsersData()}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"buttons-wrapper\">\r\n                    <button onClick={this.prevPage} disabled={!this.props.page}>&lt;</button>\r\n                    <span>{this.props.page}</span>\r\n                    <button onClick={this.nextPage}\r\n                        disabled={this.props.usersList.length <= 0}\r\n                    >&gt;</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersList: state.users,\r\n        page: state.page\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    GetUsers: (page) => dispatch(GetUsers(page)),\r\n    prevPage: (page) => dispatch(prevPage(page)),\r\n    nextPage: (page) => dispatch(nextPage(page))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Input from './InputComponent';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registration, logout } from '../actions/userDetailsActions';\r\n\r\nconst Register = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { info, status } = useSelector(state => state);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(logout());\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        e.persist();\r\n        dispatch(registration({ email, password }));\r\n    }\r\n\r\n    if (status) return <Redirect to=\"/login\" />\r\n    return (<div className=\"box-layout\">\r\n        <form onSubmit={handleSubmit}>\r\n            <h2 className=\"text-center\">Registration Form</h2>\r\n            <div className=\"form-group\">\r\n                <Input\r\n                    id=\"inputEmail\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Email address\"\r\n                    onChange={(e) => { const value = e.target.value; setEmail(value) }}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"inputPassword\"\r\n                    placeholder=\"Enter password\"\r\n                    onChange={(e) => { const value = e.target.value; setPassword(value) }}\r\n                />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block mr-4\">\r\n                Submit\r\n                </button>\r\n            <p className=\"info-error\">{info}</p>\r\n        </form>\r\n    </div>);\r\n\r\n}\r\n\r\nexport default Register;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserDetails, deleteUserData } from '../actions/userDetailsActions';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nconst UserDetails = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { viewUser } = useSelector(state => state);\r\n    const { avatar: profilePic, first_name, last_name, email } = viewUser;\r\n\r\n    useEffect(() => {\r\n        const id = parseInt(props.match.params.id);\r\n        dispatch(getUserDetails(id));\r\n    }, []);\r\n\r\n    const handleDelete = () => {\r\n        confirmAlert({\r\n            title: 'Confirm to delete',\r\n            message: 'Do you want to delete this user details?',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => {\r\n                        const id = parseInt(props.match.params.id);\r\n                        dispatch(deleteUserData(id));\r\n                        props.history.push('/dashboard');\r\n                    }\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => { }\r\n                }\r\n            ]\r\n        });\r\n\r\n    }\r\n\r\n    if (!viewUser) return (<div className=\"user-details font-weight-bold\">Loading...</div>);\r\n    return (\r\n        <div>\r\n            <button className=\"btn btn-link\">\r\n                <Link to=\"/dashboard\">Go to Dashboard</Link>\r\n            </button>\r\n            <div className=\"user-details\">\r\n                <img src={profilePic} width=\"180\" height=\"180\" />\r\n                <div className=\"user-email\">{email}</div>\r\n                <div className=\"user-name\">{`${first_name}${last_name}`}</div>\r\n                <button className=\"btn btn-outline-danger\" onClick={handleDelete}>Delete</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserDetails;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFoundPage = () => {\r\n    return (\r\n        <>\r\n            <div className=\"error-page\">\r\n                <div><b>404</b> Page Not Found!!</div>\r\n                <Link to=\"/login\">Login to view users</Link>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from '../actions/userDetailsActions';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\n\r\nconst Header = (props) => {\r\n    const dispatch = useDispatch();\r\n    const email = useSelector(state => state.email);\r\n\r\n    const handleLogout = () => {\r\n        confirmAlert({\r\n            title: 'Confirm to logout',\r\n            message: 'Do you want to logout',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => dispatch(logout())\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => { }\r\n                }\r\n            ]\r\n        });\r\n\r\n    }\r\n    return (\r\n        <div className=\"d-flex header\">\r\n            <span className=\"project-name\">\r\n                React JS\r\n            </span>\r\n            <div className=\"user-wrapper\">\r\n                <span>{email}</span>\r\n                <button className=\"btn\" onClick={handleLogout}>Logout</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => (\r\n        <Route {...rest} component={(props) => (\r\n            isAuthenticated ? (\r\n                <div>\r\n                    <Header />\r\n                    <Component {...props} />\r\n                </div>\r\n            ) : (\r\n                    <Redirect to=\"/login\" />\r\n                )\r\n        )} />\r\n    );\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.isLoggedIn\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => (\r\n        <Route {...rest} component={(props) => (\r\n            isAuthenticated ? (\r\n                <Redirect to=\"/dashboard\" />\r\n            ) : (\r\n                    <Component {...props} />\r\n                )\r\n        )} />\r\n    );\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: state.isLoggedIn\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import React from 'react';\r\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport LoginPage from '../components/LoginPage';\r\nimport Dashboard from '../components/Dashboard';\r\nimport Register from '../components/Register';\r\nimport UserDetails from '../components/UserDetails';\r\nimport NotFoundPage from '../components/NotFoundPage';\r\nimport PrivateRoute from '../router/PrivateRoute';\r\nimport PublicRoute from '../router/PublicRoute';\r\n\r\n\r\nconst AppRouter = (props) => (\r\n    <HashRouter {...props}>\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/\" exact><Redirect to=\"/login\" /></Route>\r\n                <PublicRoute path=\"/login\" component={LoginPage} />\r\n                <PrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n                <PublicRoute path=\"/register\" component={Register} />\r\n                <PrivateRoute path=\"/user/:id\" component={UserDetails} />\r\n                <Route component={NotFoundPage} />\r\n            </Switch>\r\n        </div>\r\n    </HashRouter>\r\n);\r\n\r\nexport default AppRouter;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport AppRouter from './router/AppRouter';\n\nimport './App.css';\n\nconst store = configureStore();\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}